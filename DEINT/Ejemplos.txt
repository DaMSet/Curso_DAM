String rutaFichero1 = Path.GetFullPath(fichero1); //Obtiene la ruta absoluta del fichero
String contenido = File.ReadAllText(rutaFichero1); //Guarda el contenido del fichero
File.WriteAllText(rutaFichero2, contenido); // Escribe el contenido en un fichero

File.Exists(nombreFichero) //Comprueba que existe el fichero
string[] lineas = File.ReadAllLines(nombreFichero); //Guarda en cada posicion del array una linea del fichero

File.Copy(fichero, nuevoFichero); //Duplica un fichero existente (fichero) con un nuevo nombre (nuevoFichero)

File.AppendAllText(nombreFicheroSalida, $"Mejor nota en inform치tica: {mejorNotaInformatica}\n"); //A침ade a un fichero una linea de texto


//StreamReader es otro enfoque para leer ficheros, al igual que StreamWriter para escribir.
/*
string nombreFicheroUnion = "union.txt";
StreamReader leerFichero1 = null;
StreamReader leerFichero2 = null;
StreamWriter escribirUnion = null;

leerFichero1 = new StreamReader(fichero1);
leerFichero2 = new StreamReader(fichero2);
escribirUnion = new StreamWriter(nombreFicheroUnion);
*/

//Para leer y escribir:
while (!leerFichero1.EndOfStream)
{
    escribirUnion.WriteLine(leerFichero1.ReadLine());
}

-------------------------------------------------------------------------------------------------------------------------------------------

Directory.Exists(directorioPath) //Comprueba que exista el directorio

String directorioActual = Environment.CurrentDirectory; // Obtiene la ruta completa del directorio actual
String directorioPath = Path.Combine(directorioActual, directorio); //Combina un directorio con otro (Mete uno dentro del otro)
String[] ficheros = Directory.GetFiles(directorioPath); //Guarda en un array los ficheros dentro del directorio

Path.GetExtension(fichero); //obtener la extensi칩n de un archivo

String subDirectorioPath = Path.Combine(directorioPath, subDirectorio); //Se combinan para luego crear un subDirectorio
Directory.CreateDirectory(subDirectorioPath); //Crea un nuevo directorio en la ruta especificada

File.Copy(archivo, destinoArchivo, true); //copiar un archivo de origen (archivo) a un destino (destinoArchivo).

File.Delete(archivo); // Elimina el archivo

Path.GetFileNameWithoutExtension(fichero); //obtener el nombre de archivo (sin la extensi칩n) 
----------------------------------------------------------------------------------------------------

Serializacion de XML 


// Serializar objeto a XML
XmlSerializer serializer = new XmlSerializer(typeof(TipoDeObjeto));
TextWriter writer = new StreamWriter("ruta\\archivo.xml");
serializer.Serialize(writer, objeto);
writer.Close();

// Deserializar XML a objeto
XmlSerializer serializer = new XmlSerializer(typeof(TipoDeObjeto));
TextReader reader = new StreamReader("ruta\\archivo.xml");
TipoDeObjeto objeto = (TipoDeObjeto)serializer.Deserialize(reader);
reader.Close();


Serializacion de JSON 


// Serializar objeto a JSON
JsonSerializerOptions opciones = new JsonSerializerOptions { WriteIndented = true };
string jsonString = JsonSerializer.Serialize(objeto, opciones);

// Escribir JSON en un archivo
File.WriteAllText("ruta\\archivo.json", jsonString);


// Deserializar JSON a objeto
string jsonString = File.ReadAllText("ruta\\archivo.json");
MiClase objetoDeserializado = JsonSerializer.Deserialize<MiClase>(jsonString);

// Utilizar el objeto deserializado
Console.WriteLine($"Propiedad1: {objetoDeserializado.Propiedad1}");
Console.WriteLine($"Propiedad2: {objetoDeserializado.Propiedad2}");